{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/victorpubh/code/intnet-moovie/src/contexts/themeContext.tsx\";\nimport React, { createContext, useContext, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nconst theme = {\n  light: {\n    colors: {\n      background: 'rgb(50, 50, 50)',\n      text: 'white'\n    }\n  },\n  dark: {\n    colors: {\n      background: 'white',\n      text: 'rgb(50, 50, 50)'\n    }\n  }\n};\nexport const ThemeContext = /*#__PURE__*/createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const {\n    0: mode,\n    1: setMode\n  } = useState('light');\n  const value = {\n    mode\n  };\n  const custom = theme[mode];\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: custom,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  const {\n    mode\n  } = context;\n  return {\n    mode\n  };\n};\nexport default AppProvider;","map":{"version":3,"sources":["/home/victorpubh/code/intnet-moovie/src/contexts/themeContext.tsx"],"names":["React","createContext","useContext","useState","ThemeProvider","theme","light","colors","background","text","dark","ThemeContext","AppProvider","children","mode","setMode","value","custom","useTheme","context"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE,iBADR;AAEJC,MAAAA,IAAI,EAAE;AAFF;AADL,GADG;AAOVC,EAAAA,IAAI,EAAE;AACFH,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE,OADR;AAEJC,MAAAA,IAAI,EAAE;AAFF;AADN;AAPI,CAAd;AAeA,OAAO,MAAME,YAAY,gBAAGV,aAAa,EAAlC;;AAEP,MAAMW,WAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,OAAD,CAAhC;AAEA,QAAMa,KAAK,GAAG;AAAEF,IAAAA;AAAF,GAAd;AACA,QAAMG,MAAc,GAAGZ,KAAK,CAACS,IAAD,CAA5B;AACA,sBAAQ,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEE,KAA9B;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEC,MAAtB;AAAA,gBACMJ;AADN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAAR;AAKH,CAVD;;AAYA,OAAO,MAAMK,QAAQ,GAAG,MAAM;AAC1B,QAAMC,OAAO,GAAGjB,UAAU,CAACS,YAAD,CAA1B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWK,OAAjB;AACA,SAAO;AAAEL,IAAAA;AAAF,GAAP;AACH,CAJM;AAMP,eAAeF,WAAf","sourcesContent":["import React, { createContext, useContext, useState } from 'react'\nimport { ThemeProvider } from 'styled-components'\n\nconst theme = {\n    light: {\n        colors: {\n            background: 'rgb(50, 50, 50)',\n            text: 'white'\n        }\n    },\n    dark: {\n        colors: {\n            background: 'white',\n            text: 'rgb(50, 50, 50)'\n        }\n    }\n}\n\nexport const ThemeContext = createContext()\n\nconst AppProvider: React.FC = ({ children }) => {\n    const [mode, setMode] = useState('light')\n\n    const value = { mode }\n    const custom: Object = theme[mode]\n    return (<ThemeContext.Provider value={value}>\n                <ThemeProvider theme={custom}>\n                    { children }\n                </ThemeProvider>\n            </ThemeContext.Provider>)\n}\n\nexport const useTheme = () => {\n    const context = useContext(ThemeContext)\n    const { mode } = context\n    return { mode }\n}\n\nexport default AppProvider"]},"metadata":{},"sourceType":"module"}