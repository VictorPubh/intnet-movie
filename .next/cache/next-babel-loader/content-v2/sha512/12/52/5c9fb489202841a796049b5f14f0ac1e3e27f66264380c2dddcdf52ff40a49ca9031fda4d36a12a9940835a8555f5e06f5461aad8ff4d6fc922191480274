{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/victorpubh/code/intnet-moovie/src/components/Popular.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Card from './Card';\nimport Loading from './Loading';\nconst env = {\n  TMDB_KEY: '985b6732c229227d090a82fbed387761',\n  // process.env.TMDB_KEY\n  TMDB_URI: 'https://api.themoviedb.org/3' // process.env.TMDB_URI\n\n};\n\nconst Popular = () => {\n  _s2();\n\n  _s();\n\n  const {\n    0: popular,\n    1: setPopular\n  } = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      await getData();\n    };\n\n    fetchData();\n  }, []);\n\n  const getData = () => {\n    axios.get(`${env.TMDB_URI}/movie/popular`, {\n      params: {\n        api_key: env.TMDB_KEY\n      }\n    }).then(response => {\n      const {\n        data\n      } = response;\n      const {\n        results\n      } = data;\n      setPopular(results);\n    }).catch(error => console.error(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: popular != null ? popular.map((movie, i) => /*#__PURE__*/_jsxDEV(Card, {\n      current: movie\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this)) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Popular, \"piUC8cw1giGoW64PViAjWQ8Ylk8=\");\n\n_c3 = Popular;\n\n_s(Popular, \"h2IdFZNOPzm9FSC/BD6iMejbEq4=\");\n\n_c = Popular;\nconst Container = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-wrap: wrap;\n  gap: 2rem;\n`;\n_c2 = Container;\nexport default Popular;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Popular\");\n$RefreshReg$(_c2, \"Container\");\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}\n\nvar _c3;\n\n$RefreshReg$(_c3, \"Popular\");","map":{"version":3,"sources":["/home/victorpubh/code/intnet-moovie/src/components/Popular.tsx"],"names":["env","TMDB_KEY","TMDB_URI","Popular","setPopular","useState","useEffect","fetchData","getData","axios","params","api_key","response","data","results","error","console","popular","movie","Container","styled","div"],"mappings":";;;;;;;AAAA,SAAA,QAAA,EAAA,SAAA,QAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,OAAA,IAAA,MAAA,QAAA;AACA,OAAA,OAAA,MAAA,WAAA;AAEA,MAAMA,GAAG,GAAG;AACRC,EAAAA,QAAQ,EADA,kCAAA;AACsC;AAC9CC,EAAAA,QAAQ,EAFA,8BAAA,CAEiC;;AAFjC,CAAZ;;AAKA,MAAMC,OAAiB,GAAG,MAAM;AAAA;;AAAA,EAAA,EAAA;;AAC9B,QAAM;AAAA,OAAA,OAAA;AAAA,OAAUC;AAAV,MAAwBC,QAAQ,CAAtC,IAAsC,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,OAAN,EAAA;AADF,KAAA;;AAIAD,IAAAA,SAAS;AALF,GAAA,EAATD,EAAS,CAATA;;AAQA,QAAME,OAAO,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAALA,GAAAA,CAAW,GAAET,GAAG,CAACE,QAAjBO,gBAAAA,EAA2C;AACzCC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAEX,GAAG,CAACC;AAAf;AADiC,KAA3CQ,EAAAA,IAAAA,CAGOG,QAAD,IAAc;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAN,QAAA;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAN,IAAA;AACAV,MAAAA,UAAU,CAAVA,OAAU,CAAVA;AANFK,KAAAA,EAAAA,KAAAA,CAQQM,KAAD,IAAWC,OAAO,CAAPA,KAAAA,CARlBP,KAQkBO,CARlBP;AADF,GAAA;;AAYA,SAAA,aACM,OAAA,CAAA,SAAA,EAAA;AAAA,IAAA,QAAA,EACIQ,OAAO,IAAR,IAACA,GAAoB,OAAO,CAAP,GAAA,CAAY,CAAA,KAAA,EAAA,CAAA,KAAA,aAC9B,OAAA,CAAA,IAAA,EAAA;AAAM,MAAA,OAAO,EAAEC;AAAf,KAAA,EAAA,CAAA,EAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAAA,EADH,IACG,CADkB,CAApBD,GAAD,aAEI,OAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAAA,EAAA,IAAA;AAHP,GAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,IAAA,QAAA,EAAA,YAAA;AAAA,IAAA,UAAA,EAAA,EAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAAA,EADN,IACM,CADN;AAvBF,CAAA;;IAAMd,O;;MAAAA,O;;GAAAA,O;;KAAAA,O;AAgCN,MAAMgB,SAAS,GAAGC,MAAM,CAACC,GAAI;AAC7B;AACA;AACA;AACA;AAJA,CAAA;MAAMF,S;AAON,eAAA,OAAA","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\nimport Card from './Card'\nimport Loading from './Loading'\n\nconst env = {\n    TMDB_KEY: '985b6732c229227d090a82fbed387761', // process.env.TMDB_KEY\n    TMDB_URI: 'https://api.themoviedb.org/3' // process.env.TMDB_URI\n}\n\nconst Popular: React.FC = () => {\n  const [popular, setPopular] = useState<movie[]|null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getData()\n    }\n\n    fetchData()\n  }, [])\n\n  const getData = () => {\n    axios.get(`${env.TMDB_URI}/movie/popular`, {\n      params: { api_key: env.TMDB_KEY }\n    })\n    .then((response) => {\n      const { data }: { data: tmdbResponse } = response\n      const { results }: { results: movie[] } = data\n      setPopular(results)\n    })\n    .catch((error) => console.error(error))\n  }\n\n  return (\n        <Container>\n          {(popular != null) ? (popular.map((movie, i) =>\n              <Card current={movie} key={i} />\n          )) : <Loading />}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-wrap: wrap;\n  gap: 2rem;\n`;\n\nexport default Popular"]},"metadata":{},"sourceType":"module"}